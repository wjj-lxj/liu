/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-05-17 14:33:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.center.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1589425509887L));
    _jspx_dependants.put("jar:file:/E:/javaSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/wjj-video-admin-mng/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<!-- BEGIN HEADER -->\n");
      out.write("<div class=\"page-header navbar navbar-fixed-top\">\n");
      out.write("    <!-- BEGIN HEADER INNER -->\n");
      out.write("    <div class=\"page-header-inner \">\n");
      out.write("        <!-- BEGIN LOGO -->\n");
      out.write("        <div class=\"page-logo\">\n");
      out.write("            <a href=\"");
      out.print(request.getContextPath());
      out.write("/\">\n");
      out.write("                <img src=\"");
      out.print(request.getContextPath());
      out.write("/static/pages/img/logos/logo.png\" alt=\"logo\" class=\"logo-default\" /> \n");
      out.write("            </a>\n");
      out.write("            <div class=\"menu-toggler sidebar-toggler\" style=\"width: 19px; height: 19px;\">\n");
      out.write("                <span style=\"top: 8px;\"></span>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <!-- END LOGO -->\n");
      out.write("        <!-- BEGIN RESPONSIVE MENU TOGGLER -->\n");
      out.write("        <a href=\"javascript:;\" class=\"menu-toggler responsive-toggler\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" style=\"width: 19px; height: 19px;\">\n");
      out.write("            <span style=\"top: 8px;\"></span>\n");
      out.write("        </a>\n");
      out.write("        <!-- END RESPONSIVE MENU TOGGLER -->\n");
      out.write("        <!-- BEGIN TOP NAVIGATION MENU -->\n");
      out.write("        <div class=\"top-menu\">\n");
      out.write("            <ul class=\"nav navbar-nav pull-right\">\n");
      out.write("                <!-- BEGIN USER LOGIN DROPDOWN -->\n");
      out.write("                <!-- DOC: Apply \"dropdown-dark\" class after below \"dropdown-extended\" to change the dropdown styte -->\n");
      out.write("                <li class=\"dropdown dropdown-user\">\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/center.shtml\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" data-hover=\"dropdown\" data-close-others=\"true\">\n");
      out.write("                        <span class=\"username username-hide-on-mobile\"> 欢迎登录 </span>\n");
      out.write("                    </a>\n");
      out.write("                </li>\n");
      out.write("                <!-- END USER LOGIN DROPDOWN -->\n");
      out.write("                <!-- BEGIN QUICK SIDEBAR TOGGLER -->\n");
      out.write("                <!-- DOC: Apply \"dropdown-dark\" class after below \"dropdown-extended\" to change the dropdown styte -->\n");
      out.write("                <li class=\"dropdown dropdown-quick-sidebar-toggler\">\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath() );
      out.write("/users/logout.action\" class=\"dropdown-toggle\">\n");
      out.write("                        <i class=\"icon-logout\"></i>\n");
      out.write("                    </a>\n");
      out.write("                </li>\n");
      out.write("                <!-- END QUICK SIDEBAR TOGGLER -->\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("        <!-- END TOP NAVIGATION MENU -->\n");
      out.write("    </div>\n");
      out.write("    <!-- END HEADER INNER -->\n");
      out.write("</div>\n");
      out.write("<!-- END HEADER -->");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
